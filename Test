LPlr = game.Players.LocalPlayer
MDown = false
Mouse = LPlr:GetMouse()
function ConvertNumbers(X, Y)
local TX = Mouse.ViewSizeX*X
local TY = Mouse.ViewSizeY*Y
return TX, TY
end
local OriginalMaxAndMin = {LPlr.CameraMaxZoomDistance, LPlr.CameraMinZoomDistance}
function MoveableItem(item)
item.InputBegan:connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
MDown = true
local CX, CY = ConvertNumbers(item.Position.X.Scale, item.Position.Y.Scale)
item.Position = UDim2.new(0, item.Position.X.Offset+CX, 0, item.Position.Y.Offset+CY)
local StartX = Mouse.X - item.Position.X.Offset
local StartY = Mouse.Y - item.Position.Y.Offset
while MDown == true do
item.Position = UDim2.new(0, Mouse.X - StartX, 0, Mouse.Y - StartY)
wait()
end
end
end)
item.InputEnded:connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton1 then
MDown = false
end
end)
end
function LockedCamera(Val)
local Dist = (game.Workspace.Camera.CoordinateFrame.p - LPlr.Character.Head.Position).Magnitude
LPlr.CameraMaxZoomDistance = Dist
LPlr.CameraMinZoomDistance = Dist
if Val ~= true then
LPlr.CameraMaxZoomDistance = OriginalMaxAndMin[1]
LPlr.CameraMinZoomDistance = OriginalMaxAndMin[2]
end
end
function ChangePos(input, item, Amount)
local Pos = item.CanvasPosition
if Amount == nil then
Amount = 90
end
Amount = Amount *-1
Pos = Pos + Vector2.new(0, input.Position.Z*Amount)
if Pos.Y < 0 then
Pos = Vector2.new(0, 0)
elseif Pos.Y > item.CanvasSize.Y.Offset then
Pos = Vector2.new(0, item.CanvasSize.Y.Offset)
end
item.CanvasPosition = Pos
end
function ScrollableItem(item, Amount)
item.ScrollingEnabled = false
item.inputBegan:connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseWheel then
ChangePos(input, item, Amount)
end
end)
item.InputChanged:connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseWheel then
ChangePos(input, item, Amount)
end
end)
item.MouseEnter:connect(function()
LockedCamera(true)
end)
item.MouseLeave:connect(function()
LockedCamera()
end)
end

BrickBronzeGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
BrickBronzeGui.Name = "BrickBronzeGui"
BrickBronzeGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main = Instance.new("Frame", BrickBronzeGui)
Main.Name = "Main"
Main.BackgroundColor3 = Color3.fromRGB(16, 180, 255)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.38, 0, 0.289, 0)
Main.Size = UDim2.new(0, 200, 0, 250)
MoveableItem(Main)

TextLabel = Instance.new("TextLabel", Main)
TextLabel.Name = "TextLabel"
TextLabel.BackgroundColor3 = Color3.fromRGB(8, 202, 255)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(1, 0, 0, 25)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Victini's Brick Bronze Gui"
TextLabel.TextColor3 = Color3.fromRGB(107, 8, 220)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextWrapped = true

ScrollingFrame = Instance.new("ScrollingFrame", Main)
ScrollingFrame.Name = "ScrollingFrame"
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 0, 0, 25)
ScrollingFrame.Size = UDim2.new(1, 0, 1, -25)
ScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.ScrollBarThickness = 4
ScrollableItem(ScrollingFrame, 90)

UIListLayout = Instance.new("UIListLayout", ScrollingFrame)
UIListLayout.Name = "UIListLayout"
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)

TextButton = Instance.new("TextButton")
TextButton.Name = "TextButton"
TextButton.BackgroundColor3 = Color3.fromRGB(20, 153, 255)
TextButton.BorderSizePixel = 0
TextButton.Size = UDim2.new(1, -4, 0, 30)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Test"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14
TextButton.TextWrapped = true

function AddButton(Txt, Func, ...)
    local B = TextButton:Clone()
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 32*#ScrollingFrame:GetChildren())
    B.Parent = ScrollingFrame
    B.Text = Txt
    local Args = {...}
    B.MouseButton1Down:connect(function()
        Func(unpack(Args))
    end)
    return B
end

Get = game:GetService("ReplicatedStorage").GET
function GetMainData()
    for i, v in pairs(debug.getregistry()) do
        if typeof(v) == "function" then
            for a, b in pairs(debug.getupvalues(v)) do
                if typeof(b) == "table" and rawget(b, "Fishing") then
                    return b
                end
            end
        end
    end
end
Data = GetMainData()
AuthKey = debug.getupvalue(Data["Network"]["getAuthKey"], 1)
function ToggleSubmarine(Val)
    local Sub = true
    if LPlr.Character ~= nil and LPlr.Character:FindFirstChild("UMVModel") then
        Sub = false
    end
    if Val ~= nil then
        Sub = Val
    end
    Get:InvokeServer(AuthKey, "ToggleSubmarine", Sub)
end
function GoInvisible()
    if LPlr.Character == nil or LPlr.Character:FindFirstChild("UMVModel") and not LPlr.Character.UMVModel:FindFirstChild("Root") then
        return
    end
    ToggleSubmarine(true)
    repeat
        wait()
    until LPlr.Character:FindFirstChild("UMVModel")
    LPlr.Character.UMVModel:FindFirstChild("Root"):remove()
end
function GoVisible()
    ToggleSubmarine(false)
end
local SF = {}
SF["Fish"] = Data["Fishing"]["Fish"]
SF["Fly"] = Data["Menu"]["map"]["fly"]
local SkipChat = true
local OldWait;
OldWait = hookfunction(Data["NPCChat"]["AdvanceSignal"]["wait"], function(...)
if SkipChat then
return
end
OldWait(...)
end)
local Old;
Old = hookfunction(Data["NPCChat"]["say"], function(...)
    local Args = {...}
if SkipChat then
for i = 3, #Args do
if typeof(Args[i]) == "string" then
Args[i] = "."
end
end
end
    return Old(unpack(Args))
end)


AddButton("Fly", SF["Fly"])
AddButton("Fish", function()
SF["Fish"](nil, "GoodRod", LPlr.Character.Head.Position+LPlr.Character.Head.CFrame.LookVector*5)
end)
AddButton("SubmarineMode", ToggleSubmarine, true)
AddButton("HumanMode", ToggleSubmarine, false)
AddButton("ToggleSubmarine", ToggleSubmarine)
AddButton("Invisible", GoInvisible)
AddButton("Visible", GoVisible)
local SkipChatButton;
SkipChatButton = AddButton("SkipNPCChat", function()
SkipChat = not SkipChat
SkipChatButton.BackgroundColor3 = Color3.fromRGB(20, 153, 255)
if SkipChat == false then
SkipChatButton.BackgroundColor3 = Color3.fromRGB(120, 153, 155)
end
end)
AddButton("HealPokemon", function()
Get:InvokeServer(AuthKey, "PDS", "getPartyPokeBalls")
end)
